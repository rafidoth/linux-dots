// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || cursorAtInlineEdit && inlineEditIsVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || cursorAtInlineEdit && inlineEditIsVisible && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || cursorAtInlineEdit && inlineEditIsVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || cursorAtInlineEdit && inlineEditIsVisible && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+l c",
    "command": "-extension.copyGitHubLinkToClipboard"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": " !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w l",
    "command": "-workbench.action.navigateRight",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": " !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w h",
    "command": "-workbench.action.navigateLeft",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w k",
    "command": "-workbench.action.navigateUp",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w j",
    "command": "-workbench.action.navigateDown",
    "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-vscode-neovim.send-cmdline",
    "when": "neovim.init && neovim.mode == 'cmdline'"
  },
  {
    "key": "ctrl+l g",
    "command": "-extension.openInGitHub"
  },
  {
    "key": "ctrl+l p",
    "command": "-extension.openPrGitProvider"
  },
  {
    "key": "ctrl+l",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.l && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+l",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.l && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+shift+g shift+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+alt+l",
    "command": "-workbench.action.quickchat.toggle",
    "when": "chatIsEnabled"
  },
  {
    "key": "ctrl+k ctrl+shift+l",
    "command": "-editor.toggleFoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+; ctrl+shift+l",
    "command": "-testing.coverageLastRun"
  },
  {
    "key": "shift+alt+m",
    "command": "workbench.action.toggleMultiCursorModifier"
  },
  {
    "key": "ctrl+shift+f6",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+n",
    "commnd": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-extension.vim_ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+d",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "inlineChat.start",
    "when": "inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "/",
    "command": "actions.find",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "j",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorTextFocus && sideBarVisible && !editorReadonly"
  },

  {
    "key": "ctrl+shift+j",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+m",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+s",
    "command": "extension.saveAndEscape",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+p",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "vim.mode == 'Normal' && explorerViewletFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "vim.mode == 'Normal' && explorerViewletFocus && explorerResourceIsFolder == false"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.focus",
    "when": "terminalHasBeenCreated || terminalProcessSupported"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  }
]
